model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "txt"
    image_size: 32
    channels: 4
    cond_stage_trainable: false   # Note: different from the one we trained before
    conditioning_key: crossattn
    scale_factor: 0.18215

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 1000 ] # NOTE for resuming. use 10000 if starting from scratch
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 3
    num_workers: 2
    num_val_workers: 0 # Avoid a weird val dataloader issue
    train:
      target: ldm.data.ucf101.UCFbyImages
      params:
        size: 256
#        max_data_num: 160 # for dubug
        data_root: /home/zhongguokexueyuanzidonghuayanjiusuo/datasets/UCF-101/frames_fps20
    validation:
      target: ldm.data.ucf101.UCFbyImages
      params:
        size: 256
        fix_start: True
        max_data_num: 2048
#        max_data_num: 160 # for dubug
        data_root: /home/zhongguokexueyuanzidonghuayanjiusuo/datasets/UCF-101/frames_fps20


lightning:
  trainer:
    ckpt_load_strict: False
    accelerator: 'gpu'
    devices: 4
    log_gpu_memory: all
    max_epochs: 500
    precision: 16
    auto_select_gpus: False
    strategy:
      target: strategies.DDPStrategy
      params:
        find_unused_parameters: True
#    strategy:
#      target: strategies.ColossalAIStrategy
#      params:
#        use_chunk: True
#        enable_distributed_storage: True
#        placement_policy: cuda
#        force_outputs_fp32: true
#        min_chunk_size: 64

    log_every_n_steps: 2
    logger: True
    default_root_dir: "experiments/"

  logger:
    wandb:
      target: lightning.pytorch.loggers.WandbLogger
      params:
          project: control
          group: ucf101
          name: nowname
          save_dir: "experiments/"
          offline: opt.debug
          id: nowname
